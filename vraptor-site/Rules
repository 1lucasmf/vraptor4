#!/usr/bin/env ruby

def define_layout(archive, layout)
  compile archive do  
    unless item.binary?
      filter :erb
      layout layout
    end
  end
end

def stylized(*archive, layout)
  archive.each do |a|
    compile a do
      if layout
        filter :kramdown 
        filter :colorize_syntax, :default_colorizer => :pygmentsrb
        layout layout 
        filter :relativize_paths, :type => :html
        filter :relativize_paths, :type => :css  
      end
    end
  end
end

def css_routes(*name)
  name.each do |n| 
    route n + '/' do
        n + '.css'
    end  
  end
end

stylized '/logo/', '/custom-highlight/', '/style/', false

stylized '/pt/docs/*', 'documentacao'

stylized '/*', 'default'

define_layout '/pt/docs/*', 'documentacao'

define_layout '/*', 'default'

css_routes '/style', '/custom-highlight'


route '*' do
  if item.binary?
    # Write item with identifier /foo/ to /foo.ext
    item.identifier.chop + '.' + item[:extension]
  else
    # Write item with identifier /foo/ to /foo/index.html
    item.identifier + 'index.html'
  end
end

layout '*', :erb


